"""
This type stub file was generated by pyright.
"""

"""External interface to the BeautifulSoup HTML parser.
"""
__all__ = ["fromstring", "parse", "convert_tree"]
_DECLARATION_OR_DOCTYPE = ...
def fromstring(data, beautifulsoup=..., makeelement=..., **bsargs): # -> None:
    """Parse a string of HTML data into an Element tree using the
    BeautifulSoup parser.

    Returns the root ``<html>`` Element of the tree.

    You can pass a different BeautifulSoup parser through the
    `beautifulsoup` keyword, and a diffent Element factory function
    through the `makeelement` keyword.  By default, the standard
    ``BeautifulSoup`` class and the default factory of `lxml.html` are
    used.
    """
    ...

def parse(file, beautifulsoup=..., makeelement=..., **bsargs):
    """Parse a file into an ElemenTree using the BeautifulSoup parser.

    You can pass a different BeautifulSoup parser through the
    `beautifulsoup` keyword, and a diffent Element factory function
    through the `makeelement` keyword.  By default, the standard
    ``BeautifulSoup`` class and the default factory of `lxml.html` are
    used.
    """
    ...

def convert_tree(beautiful_soup_tree, makeelement=...):
    """Convert a BeautifulSoup tree to a list of Element trees.

    Returns a list instead of a single root Element to support
    HTML-like soup with more than one root element.

    You can pass a different Element factory through the `makeelement`
    keyword.
    """
    ...

_parse_doctype_declaration = ...
class _PseudoTag:
    def __init__(self, contents) -> None:
        ...
    
    def __iter__(self):
        ...
    


handle_entities = ...
def unescape(string): # -> str:
    ...

